[project]
name = "xngin"
version = "0.0.1"
dependencies = [
    "atlas-provider-sqlalchemy>=0.2.4,<3",
    "boto3>=1.35,<1.36",
    "deepdiff>=8.0.1,<8.1",
    "dnspython>=2.7.0",
    "email-validator>=2.2.0",
    "fastapi[standard]>=0.115.6,<0.116.0",
    "gspread>=6.1.2,<6.2.0",
    "httpx>=0.27.0,<0.28.0",
    "loguru>=0.7.3,<0.8.0",
    "numpy>=1.26.4,<1.27",
    "pandas-gbq>=0.25.0,<0.26",
    "pandas>=2.2.0,<3",
    "parsy>=2.1,<3",
    "psycopg2>=2.9.10,<3; sys_platform == 'linux'",
    "psycopg2-binary>=2.9.10,<3; sys_platform == 'darwin'",
    "psycopg[binary]>=3.2.3,<4",
    "pydantic>=2.10.4,<3.0.0",
    "python-jose>=3.3.0,<3.4",
    "scipy>=1.12.0,<2",
    "sentry-sdk[fastapi]>=2.19.2,<2.20",
    "sqlalchemy-bigquery>=1.12.0,<2",
    "sqlalchemy==2.0.32",
    "statsmodels>=0.14.1,<0.20",
    "stochatreat>=0.0.20,<0.1.0",
    "tenacity>=9.0.0,<9.1.0",
    "typer>=0.12.5,<0.13.0",
    "uvicorn[standard]>=0.32.0",
    "zstandard>=0.23.0,<0.24",
]
requires-python = ">=3.12,<3.13"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
xngin-apiserver = "xngin.apiserver.main:main"
xngin-cli = "xngin.cli.main:app"
xngin-tq = "xngin.tq.cli:app"

[tool.pytest.ini_options]
log_cli = 0  # set to 1 for live logs
log_cli_level = "warn"
markers = [
    "integration: integration tests that rely on remote resources",
    "nondeterministic: tests that are nondeterministic (but should be)"
]
addopts = "-m 'not integration and not nondeterministic'"
# filtewarnings can be used to silence warnings during tests.
# format is: action:message:category:module
filterwarnings = [
    # Workaround for a bug in FastAPI's OpenAPI schema generation.
    "ignore:`example` has been deprecated:DeprecationWarning:xngin.apiserver.dependencies",
    # Performance optimization warning caused by: reflect(dbengine()).
    "ignore:.+unnest will not make use of SQL compilation caching:sqlalchemy.exc.SAWarning:"
]
env = [
    "SENTRY_DSX="  # Disable Sentry in unit tests.
]

[tool.ruff]
preview = true
exclude = ["*.ipynb"]

[tool.ruff.lint]
# Rules: https://docs.astral.sh/ruff/rules/
select = [
    "A",
    "ASYNC",
    "B",
    "E",
    "F",
    "FAST",
    "FURB",
    "N",
    "NPY",
    "PD",
    "PLC",
    "PIE",
    "PLE",
    "PLR",
    "PLW1508",
    "RET",
    "RUF",
    "SIM",
    "TRY",
    "UP",
    "W",
]
ignore = [
    "E266", # Too many leading `#` before block comment
    "E501", # redundant line length warnings
    "FURB101", # `open` and `read` should be replaced by `Path(file).read_text()`
    "FURB103", # `open` and `write` should be replaced by `Path(filename)....`
    "FURB152", # replace values that resemble mathemematical constants with constants (e.g. 3.14 => math.pi)
    "NPY002", # Replace legacy `np.random.X` call with `np.random.Generator`
    "PD002", # `inplace=True` should be avoided; it has inconsistent behavior
    "PD003", # `.isna` is preferred to `.isnull`; functionality is equivalent"
    "PD101", # Using `series.nunique()` for checking that a series is constant is inefficient
    "PD901", # Avoid using the generic variable name `df` for DataFrames
    "PIE808", # Unnecessary `start` argument in `range`
    "PLC1901", # x == "" can be simplified to not x
    "PLR0911", # too many return statements
    "PLR0912", # too many branches
    "PLR0913", # too many positional arguments
    "PLR0914", # too many local variables
    "PLR0915", # too many statements
    "PLR0917", # too many positional arguments
    "PLR1702", # too many nested blocks
    "PLR2004", # magic value,
    "PLR6301", # method could be a function, class method, or static method
    "RUF029",
    "TRY003",
]

[tool.uv]
dev-dependencies = [
    "pre-commit>=4.0.1,<4.1.0",
    "pytest>=8.3.2,<9.0.0",
    "ruff>=0.8.0,<0.9.0",
    "pytest-mock>=3.14.0,<4",
    "types-psycopg2>=2.9.10,<3",
    "mypy>=1.13.0",
    "pandas-stubs>=2.2.3.241126",
    "pytest-env>=1.1.5,<1.2",
]
environments = [
    "sys_platform == 'darwin'",
    "sys_platform == 'linux'",
]

[tool.mypy]
python_version = 3.12
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "deepdiff"
ignore_missing_imports = true
