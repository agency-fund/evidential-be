name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run-bq-integration:
        type: boolean
        required: false
        default: false
        description: "Run the BQ integration tests"


permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Relax hostname checks.
  ALLOW_CONNECTING_TO_PRIVATE_IPS: "1"

  DEBIAN_FRONTEND: noninteractive
  FORCE_COLOR: "1"
  PYTHONUNBUFFERED: "1"

  # Tests should never connect to this DSN but it must be set.
  DATABASE_URL: "postgresql://fail:fail@127.0.0.2:5499/fail"

  # Server startup will fail without these values being set.
  GOOGLE_OIDC_CLIENT_ID: "unset-google-oidc-client-id"
  GOOGLE_OIDC_CLIENT_SECRET: "unset-google-oidc-client-secret"
jobs:
  osx-setup:
    timeout-minutes: 15
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - name: Install dependencies
        run: |
          uv sync --locked --compile-bytecode
  unittests:
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: write secrets
        run: |
          mkdir -p ~/.config/gspread && echo "${GCLOUD_SERVICE_ACCOUNT_CREDENTIALS}" > ~/.config/gspread/service_account.json
          openssl sha256 ~/.config/gspread/service_account.json
        env:
          GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}
      - run: task test-coverage
        env:
          DATABASE_URL: "postgresql+psycopg://postgres:postgres@localhost:5499/test_xngin?sslmode=disable"
      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
      - name: integration tests
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/.config/gspread/service_account.json
          task test-integration
  smoke-cli:
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5499:5432
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: xngin-cli export-openapi-spec
        run: |
          XNGIN_PUBLISH_ALL_DOCS=true uv run xngin-cli export-openapi-spec
      - name: xngin-cli config validators
        run: |
          set -x
          uv run xngin-cli --help
          uv run xngin-cli export-json-schemas
          uv run xngin-cli validate-testing-settings ./src/xngin/apiserver/testdata/xngin.testing.settings.json
          uv run xngin-cli validate-testing-settings ./src/xngin/apiserver/testdata/xngin.gha.settings.json
      - name: xngin-cli smoke tests
        env:
          DATABASE_URL: "postgresql+psycopg://postgres:postgres@localhost:5499/postgres?sslmode=disable"
          PGPASSWORD: postgres
        run: |
          # These imports correspond to entries in xngin.gha.settings.json.
          uv run xngin-cli create-testing-dwh --dsn postgresql+psycopg://postgres@127.0.0.1:5499/postgres
          uv run xngin-cli create-testing-dwh --dsn postgresql+psycopg://postgres@127.0.0.1:5499/postgres \
            --schema-name alt --table-name=alt_table

          # These do the same thing as above but use psycopg2 driver to ensure that it still works.
          uv run xngin-cli create-testing-dwh --dsn postgresql+psycopg2://postgres@127.0.0.1:5499/postgres
          uv run xngin-cli create-testing-dwh --dsn postgresql+psycopg2://postgres@127.0.0.1:5499/postgres \
            --schema-name alt2 --table-name=alt_table2

          # Create the application database.
          uv run xngin-cli create-apiserver-db
  bq-integration:
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    if: contains(github.event.pull_request.body, 'run:bqintegration') || inputs.run-bq-integration
    env:
      DATASET_NAME: bqintegration_${{ github.run_id }}_${{ github.run_attempt }}
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5499:5432
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}'
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "xngin-development-dc"
          install_components: "bq"
      - name: bq integration tests
        env:
          GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}
        run: |
          bq --location=us-west1 mk --dataset --default_table_expiration=86400 xngin-development-dc:$DATASET_NAME

          export ECHO_SQL="1"
          mkdir -p ~/.config/gspread && echo "${GCLOUD_SERVICE_ACCOUNT_CREDENTIALS}" > ~/.config/gspread/service_account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/.config/gspread/service_account.json
          export XNGIN_QUERIES_TEST_URI="bigquery://xngin-development-dc/${DATASET_NAME}?credentials_base64=$(cat ${GOOGLE_APPLICATION_CREDENTIALS} | base64 -w 0)"
          export DATABASE_URL="postgresql+psycopg://postgres:postgres@localhost:5499/test_xngin?sslmode=disable"
          uv run pytest -rA src/xngin/apiserver/dwh/test_queries.py
      - name: bq cleanup
        if: failure() || success()
        run: |
          uv run xngin-cli bigquery-dataset-delete \
            --project-id xngin-development-dc \
            --dataset-id ${DATASET_NAME} \
            || /bin/true
  docker-builds:
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: docker buildx bake

  smoke-server-bq:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    env:
      DATABASE_URL: "postgresql+psycopg://postgres:postgres@localhost:5499/postgres?sslmode=disable"
      XNGIN_CLI_TABLE_NAME: smoke_${{ github.run_id }}_${{ github.run_attempt }}
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5499:5432
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked
      - name: write secrets
        env:
          GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CONTENT }}
        run: |
          mkdir -p ~/.config/gspread && echo "${GCLOUD_SERVICE_ACCOUNT_CREDENTIALS}" > service_account.json
          openssl sha256 service_account.json
      - name: bq smoke tests
        env:
          DATABASE_URL: "postgresql+psycopg://postgres:postgres@localhost:5499/postgres?sslmode=disable"
        run: |
          set -x

          # Authenticate with environment variable because the CLI doesn't support
          # specifying credentials explicitly.
          export GOOGLE_APPLICATION_CREDENTIALS=service_account.json

          # Populate the test warehouse. This is read by the two CLI commands and the server we start below.
          uv run xngin-cli create-testing-dwh --dsn bigquery://xngin-development-dc/ds --nrows 1000

          # Unset the environment variable because we want to ensure the server is authenticating with the credentials
          # configured in the settings file and not relying on fallback behavior.
          unset GOOGLE_APPLICATION_CREDENTIALS

          # Create the application database.
          uv run xngin-cli create-apiserver-db

          # TODO: Add xngin-cli command to convert xngin.gha.settings.json into database entries and generate API key
          # suitable for use in integration tests.
      - name: bq cleanup
        if: success() || failure()
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=service_account.json
          uv run xngin-cli bigquery-table-delete \
            --project-id xngin-development-dc \
            --dataset-id ds \
            --table-id ${XNGIN_CLI_TABLE_NAME} || /bin/true
